import {
  Box,
  Button,
  Container,
  Heading,
  SimpleGrid,
  Text,
  useDisclosure
} from "@chakra-ui/react";
import { useRouter } from "next/router";
import Head from "next/head";
import { useContext } from "react";
import {
  ChevronLeft as ChevronLeftIcon,
  ChevronRight as ChevronRightIcon
} from "react-feather";
import PageLoader from "../components/pageLoader";
import DataContext from "../contexts/dataContext";
import FormField from "../components/FormField";
import CustomModal from "../components/CustomModal";
import FormContext from "../contexts/formContext";
import CustomSelect from "../components/CustomSelect";

export default function SelectTime() {
  const router = useRouter();
  const { Buildings, findEntity, loading } = useContext(DataContext);
  const {
    title,
    date,
    startTime,
    endTime,
    buildingID,
    setTitle,
    setDate,
    setStartTime,
    setEndTime,
    setBuildingID,
    setToLocal
  } = useContext(FormContext);
  const { isOpen, onOpen, onClose } = useDisclosure();

  const getBuildingName = () => {
    const build = findEntity("Buildings", buildingID);
    return !!build ? build.name : "";
  };

  const handleBuilding = id => {
    setBuildingID(id);
    onClose();
  };

  const handleSubmit = async e => {
    e.preventDefault();

    setToLocal();

    router.push("/select-building");
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        {loading ? (
          <PageLoader />
        ) : (
          <form onSubmit={handleSubmit}>
            <Container
              px={[4, 8, 8, 16]}
              py={[8, 8, 16]}
              justifyContent="space-between"
              display="flex"
              flexDir="column"
              maxW="container.lg"
              minH="100vh"
            >
              <Box>
                <Heading>Add Meeting Details</Heading>
                <Text mt="2" color="gray.700">
                  Please fill in the basic meeting details below.
                </Text>
                <Box mt="8">
                  <SimpleGrid mb="8" columns={[1, 1, 2]} gap="4">
                    <FormField
                      required
                      w="full"
                      variant="flushed"
                      name="title"
                      placeholder="Add Meeting Title"
                      label="Meeting Title"
                      value={title}
                      onChange={e => setTitle(e.target.value)}
                    />
                  </SimpleGrid>
                  <SimpleGrid mb="8" columns={[2, 3]} gap="4">
                    <FormField
                      required
                      type="date"
                      w="full"
                      variant="flushed"
                      placeholder="Select Date"
                      label="Meeting Date"
                      value={date}
                      onChange={e => setDate(e.target.value)}
                    />
                    <FormField
                      required
                      type="time"
                      w="full"
                      variant="flushed"
                      placeholder="Add Start Time"
                      label="Meeting Start Time"
                      value={startTime}
                      onChange={e => setStartTime(e.target.value)}
                    />
                    <FormField
                      required
                      type="time"
                      w="full"
                      variant="flushed"
                      placeholder="Add End Time"
                      label="Meeting End Time"
                      value={endTime}
                      onChange={e => setEndTime(e.target.value)}
                    />
                  </SimpleGrid>
                  <SimpleGrid mb="8" columns={[1, 1, 3]} gap="4">
                    <CustomSelect
                      required
                      w="full"
                      py="2"
                      variant="unstyled"
                      onClick={onOpen}
                      onChange={() => {}}
                      value={getBuildingName()}
                      label="Meeting Building *"
                      placeholder="Select Building"
                    />
                    <CustomModal
                      isOpen={isOpen}
                      onClose={onClose}
                      label="Select Building"
                    >
                      {Buildings.map(building => (
                        <Button
                          w="100%"
                          py="3"
                          px="4"
                          my="1"
                          h="max-content"
                          variant="ghost"
                          key={building.id}
                          onClick={() => handleBuilding(building.id)}
                        >
                          <Box w="full" textAlign="left">
                            <Text>{building.name}</Text>
                            <Text
                              mt="1"
                              fontSize="sm"
                              fontWeight="normal"
                              color="gray.500"
                            >
                              {`Meeting Rooms: ${building.meetingRooms.length}`}
                            </Text>
                          </Box>
                        </Button>
                      ))}
                    </CustomModal>
                  </SimpleGrid>
                </Box>
              </Box>

              <Box
                mt="12"
                display="flex"
                flexDir="row"
                alignItems="center"
                justifyContent="space-between"
              >
                <Button
                  variant="ghost"
                  colorScheme="gray"
                  color="gray.500"
                  leftIcon={<ChevronLeftIcon size={20} />}
                  onClick={() => router.push("/")}
                >
                  Home
                </Button>
                <Button
                  type="submit"
                  variant="solid"
                  colorScheme="blue"
                  rightIcon={<ChevronRightIcon size={20} />}
                >
                  Select Room
                </Button>
              </Box>
            </Container>
          </form>
        )}
      </main>
    </>
  );
}
